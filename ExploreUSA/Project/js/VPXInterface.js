/**Author: Kevin LoughranProject: VPX HTML5Class: VPX js document**/(function(window){	//--------------------------- CONSTRUCTOR:		var VPXInterface = function()	{			}		//--------------------------- CONSTANTS:			//--------------------------- VARIABLES:	var mapContainer;	var mapDetails;	var subMenuItems = [];		var curState;	var curStateNum;	var curTeamLogos = [];	var viewCount = 0;		var stateIDs = [];	var stateNames = [];	var stateOffX = [];	var stateOffY = [];	var stateX = [];	var stateY = [];	var stateZX = [];	var stateZY = [];	var subIDs = [];	var lineX = [];	var lineY = [];		var bulkImgLoad = 0;	var initAlpha = 0;	var imageTotal = 209;		var inTeamView = false;	var btn_audio;	var visitList;	var cookieName = 'statesVisited4';		//--------------------------- PUBLIC METHODS:		VPXInterface.init = function()	{ 				var allInfo = VPXModel.getStateInfo();				stateIDs = allInfo['stateIDs'];		stateNames = allInfo['stateNames'];		stateOffX = allInfo['stateOffX'];		stateOffY = allInfo['stateOffY'];		stateX = allInfo['stateX'];		stateY = allInfo['stateY'];		stateZX = allInfo['stateZX'];		stateZY = allInfo['stateZY'];		subIDs = allInfo['subIDs'];		lineX = allInfo['lineX'];		lineY = allInfo['lineY'];				buildMap();		buildMapSubnav();		buildHeader();		buildInstructions();		buildDetails();		buildLoader();	}		//--------------------------- PRIVATE METHODS:		function buildMap()	{		var main = document.getElementById("container");				/// map container				var mapMasker  = document.createElement("div");		mapMasker.id = "mapMasker";		main.appendChild( mapMasker );		TweenMax.to(mapMasker, 0, {css:{autoAlpha:initAlpha} });		var mapContainer  = document.createElement("div");		mapContainer.id = "mapContainer";		TweenMax.to( mapContainer, 0, { css:{x:521, y:280} });		mapMasker.appendChild( mapContainer );				var mapBgAK  = document.createElement("img");		mapBgAK.src = 'img/map_AK_bg.png';		TweenMax.to( mapBgAK, 0, { css:{  alpha:1, scaleX:.5, scaleY:.5, x:-602, y:-322 }  });		mapContainer.appendChild( mapBgAK );		$( mapBgAK ).load(function() {			trackImageLoad();		});				var mapBgHI  = document.createElement("img");		mapBgHI.src = 'img/map_HI_bg.png';		TweenMax.to( mapBgHI, 0, { css:{  alpha:1, scaleX:.5, scaleY:.5, x:-546, y:-76 }  });		mapContainer.appendChild( mapBgHI );		$( mapBgHI ).load(function() {			trackImageLoad();		});				/// states				var i;		for(i=0; i < stateIDs.length; i++)		{			var stateHolder  = document.createElement("div");			stateHolder.className = "stateHolder";			stateHolder.id = stateIDs[i] + '_holder';			TweenMax.to(stateHolder, 0, { css:{x:stateX[i], y:stateY[i]} });			mapContainer.appendChild( stateHolder );			var stateOff  = document.createElement("img");			stateOff.src = 'img/states/' + stateIDs[i] + '_off.png';			stateOff.id = stateIDs[i] + '_off';			TweenMax.to( stateOff, 0, { css:{ alpha:1, scaleX:.5, scaleY:.5, x: stateOffX[i], y:stateOffY[i]}  });			stateHolder.appendChild( stateOff );			$( stateOff ).load(function() {				trackImageLoad();			});						var stateVisit  = document.createElement("img");			stateVisit.src = 'img/states/' + stateIDs[i] + '_v.png';			stateVisit.id = stateIDs[i] + '_v';			TweenMax.to( stateVisit, 0, { css:{ alpha:0, scaleX:.5, scaleY:.5, x: stateOffX[i], y:stateOffY[i]}  });			stateHolder.appendChild( stateVisit );			$( stateVisit ).load(function() {				trackImageLoad();			});						var stateOver  = document.createElement("img");			stateOver.src = 'img/states/' + stateIDs[i] + '_over.png';			stateOver.id = stateIDs[i] + '_over';			TweenMax.to( stateOver, 0, { css:{ alpha:0, scaleX:.5, scaleY:.5, x: stateOffX[i], y:stateOffY[i]}  });			stateHolder.appendChild( stateOver );			$( stateOver ).load(function() {				trackImageLoad();			});									stateHolder.off = stateOff;			stateHolder.over = stateOver;			stateHolder.visit = stateVisit;			stateHolder.state = 'open';		}				/// map subnav				var mapSubnav  = document.createElement("div");		mapSubnav.id = "mapSubnav";		main.appendChild( mapSubnav);		TweenMax.to(mapSubnav, 0, {css:{autoAlpha:initAlpha} });				/// map hits				var mapHits = document.getElementById("mapHits");		main.appendChild( mapHits );		for(i=0; i < stateIDs.length; i++)		{			var item = document.getElementById( "state_" + stateIDs[i] );			$(item).click(onStateClick);			$(item).mouseover(onStateOver);			$(item).mouseout(onStateOut);			item.num = i;						item.style.cursor = 'pointer';		}				/// map details layer				var mapDetails  = document.createElement("div");		mapDetails.id = "mapDetails";		main.appendChild( mapDetails );				/// loader goes over map hits				var mapLoader  = document.createElement("div");		mapLoader.id = "mapLoader";		main.appendChild( mapLoader );				/// header				var mapHeaderMask  = document.createElement("div");		mapHeaderMask.id = "mapHeaderMask";		main.appendChild( mapHeaderMask );				var mapHeader  = document.createElement("div");		mapHeader.id = "mapHeader";		mapHeaderMask.appendChild( mapHeader );				/// footer				var mapFooter  = document.createElement("div");		mapFooter.id = "mapFooter";		main.appendChild( mapFooter );				var mapFooterBar  = document.createElement("div");		mapFooterBar.id = "mapFooterBar";		mapFooterBar.innerHTML = "United States of Sport";		mapFooter.appendChild( mapFooterBar );				var mapFooterLogos  = document.createElement("div");		mapFooterLogos.id = "mapFooterLogos";		mapFooterBar.appendChild( mapFooterLogos );				var logo  = document.createElement("img");		logo.src = "img/footer/logo_usa.png";		mapFooterLogos.appendChild( logo );				var logo  = document.createElement("img");		logo.src = "img/footer/logo_espn.png";		mapFooterLogos.appendChild( logo );		logo.style.cursor = 'pointer';		$(logo).click(onESPNLogoClick);				// details over elements (name)				var overH  = document.createElement("div");		overH.style.position = 'absolute';		main.appendChild( overH );				var detailsName  = document.createElement("div");		detailsName.id = "detailsName";		detailsName.innerHTML = "Illinois";		overH.appendChild( detailsName);		TweenMax.to(detailsName, 0, { css:{alpha:0} });				}		function buildMapSubnav()	{		var subnav = document.getElementById("mapSubnav");						/// map container				var mapMenu  = document.createElement("div");		mapMenu.id = "mapMenu";		subnav.appendChild( mapMenu );				var mapLines  = document.createElement("div");		mapLines.id = "mapLines";		mapMenu.appendChild( mapLines );				var i;				var subNames = [];		subNames[0] = 'Vermont';		subNames[1] = 'New Hampshire';		subNames[2] = 'Massachusetts';		subNames[3] = 'Rhode Island';		subNames[4] = 'Connecticut';		subNames[5] = 'New Jersey';		subNames[6] = 'Delaware';		subNames[7] = 'Maryland';		subNames[8] = 'Washington, D.C.';				//subIDs.length;				for(i=0; i < 9; i++)		{			var mapMenuItem  = document.createElement("div");			mapMenuItem.className = "mapMenuItem";			mapMenu.appendChild( mapMenuItem );						var itemBg  = document.createElement("img");			itemBg.src = 'img/states/_subnav/bg_' + subIDs[i] + '.png';			mapMenuItem.appendChild( itemBg );			$( itemBg ).load(function() {				trackImageLoad();			});						var itemVisit  = document.createElement("img");			itemVisit.src = 'img/states/_subnav/bg_' + subIDs[i] + '_v.png';			mapMenuItem.appendChild( itemVisit );			TweenMax.to( itemVisit, 0, { css:{ alpha:0 } });			$( itemVisit ).load(function() {				trackImageLoad();			});						var itemOver  = document.createElement("img");			itemOver.src = 'img/states/_subnav/bg_over.png';			mapMenuItem.appendChild( itemOver );			TweenMax.to( itemOver, 0, { css:{ alpha:0 } });			$( itemOver ).load(function() {				trackImageLoad();			});						var itemTitle  = document.createElement("div");			itemTitle.className = "mapMenuItemTitle";			itemTitle.innerHTML = subNames[i];			mapMenuItem.appendChild( itemTitle );						subMenuItems[ subIDs[i] ] = mapMenuItem;			mapMenuItem.off = itemBg;			mapMenuItem.over = itemOver;			mapMenuItem.visited = itemVisit;			mapMenuItem.titleDiv = itemTitle;						//// build lines						var lineOff  = document.createElement("img");			lineOff.src = 'img/states/_subnav/lines/line_' + subIDs[i] + '_off.png';			mapLines.appendChild( lineOff );			TweenMax.to( lineOff, 0, { css:{ x:lineX[i], y:lineY[i] } });			$( lineOff ).load(function() {				trackImageLoad();			});						var lineVisit  = document.createElement("img");			lineVisit.src = 'img/states/_subnav/lines/line_' + subIDs[i] + '_v.png';			mapLines.appendChild( lineVisit );			TweenMax.to( lineVisit, 0, { css:{ x:lineX[i], y:lineY[i], alpha:0 } });			$( lineVisit ).load(function() {				trackImageLoad();			});						var lineOver  = document.createElement("img");			lineOver.src = 'img/states/_subnav/lines/line_' + subIDs[i] + '_over.png';			mapLines.appendChild( lineOver );			TweenMax.to( lineOver, 0, { css:{ x:lineX[i], y:lineY[i], alpha:0 } });			$( lineOver ).load(function() {				trackImageLoad();			});						mapMenuItem.lineOff = lineOff;			mapMenuItem.lineOver = lineOver;			mapMenuItem.lineVisit = lineVisit;					}	}		function buildHeader()	{		var header = document.getElementById("mapHeader");				//////				var div = document.createElement("div");		div.id = 'header_mute';		header.appendChild(div);				btn_audio = div;		btn_audio.setting = 'on';		$( btn_audio ).click( onAudioClick );		$( btn_audio ).mouseover( onAudioOver );		$( btn_audio ).mouseout( onAudioOut );				// check for windows phone		var isWinPhone = ( navigator.userAgent.match(/Windows Phone/g) ? true : false );		var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;		if( (isWinPhone) || (isChrome) )		{			//alert('is windows phone');			TweenMax.to( btn_audio, 0, {css:{autoAlpha:0}});		}				var image = document.createElement("img");		image.src = 'img/header/audio_on.png';		div.appendChild(image);		btn_audio.mute = image;				var image = document.createElement("img");		image.src = 'img/header/audio_on_over.png';		TweenMax.to(image, 0, {css:{alpha:0}});		div.appendChild(image);		btn_audio.muteOver = image;				var image = document.createElement("img");		image.src = 'img/header/audio_off.png';		TweenMax.to(image, 0, {css:{alpha:1}});		div.appendChild(image);		btn_audio.unmute = image;				var image = document.createElement("img");		image.src = 'img/header/audio_off_over.png';		TweenMax.to(image, 0, {css:{alpha:0}});		div.appendChild(image);		btn_audio.unmuteOver = image;				///				btn_audio.mute.style.display = 'block';		btn_audio.muteOver.style.display = 'block';				btn_audio.unmute.style.display = 'none';		btn_audio.unmuteOver.style.display = 'none';	}		function buildInstructions()	{		var subnav = document.getElementById("mapSubnav");						/// map container				var mapInstructions  = document.createElement("div");		mapInstructions.id = "mapInstructions";		mapInstructions.innerHTML = '<p>Click on any state<br>to learn about it <br>& its sports teams.</p>';		subnav.appendChild( mapInstructions );				var mapInstCount = document.createElement("div");		mapInstCount.id = "mapInstCount";		mapInstCount.innerHTML = viewCount + ' of ' + stateIDs.length + ' Viewed';		mapInstructions.appendChild( mapInstCount );	}		function buildDetails()	{		var details = document.getElementById("mapDetails");				var detailsZoomOut  = document.createElement("div");		detailsZoomOut.id = "detailsZoomOut";		details.appendChild( detailsZoomOut );		$( detailsZoomOut ).click(onZoomOutClick);		$( detailsZoomOut ).mouseover(onZoomOutOver);		$( detailsZoomOut ).mouseout(onZoomOutOut);				var image = document.createElement('img');		image.src = 'img/details/zoom_out_over.png';		detailsZoomOut.appendChild( image );		TweenMax.to(image, 0, { css:{alpha:0} });		detailsZoomOut.over = image;				var teamsHolder = document.createElement("div");		teamsHolder.id = "teamsHolder";		details.appendChild( teamsHolder );				var detailsVideoWin  = document.createElement("div");		detailsVideoWin.id = "detailsVideoWin";		details.appendChild( detailsVideoWin );				var detailsVideoHolder  = document.createElement("div");		detailsVideoHolder.id = "detailsVideoHolder";		detailsVideoWin.appendChild( detailsVideoHolder );				var detailsVideoInfo  = document.createElement("div");		detailsVideoInfo.id = "detailsVideoInfo";		detailsVideoWin.appendChild( detailsVideoInfo );			}		function buildLoader()	{		var mapLoader = document.getElementById("mapLoader");				var mapLoaderWin  = document.createElement("div");		mapLoaderWin.id = "mapLoaderWin";		mapLoader.appendChild( mapLoaderWin );				mapLoaderWin.innerHTML = '<h1>BUILDING MAP</h1>'				var mapLoaderBarBg  = document.createElement("div");		mapLoaderBarBg.id = "mapLoaderBarBg";		mapLoaderWin.appendChild( mapLoaderBarBg );				var mapLoaderBar  = document.createElement("div");		mapLoaderBar.id = "mapLoaderBar";		mapLoaderBarBg.appendChild( mapLoaderBar );		TweenMax.to( mapLoaderBar, 0, {css:{width:0}});	}		///----- cookie		function setCookie(c_name,value,exdays)	{		var exdate=new Date();		exdate.setDate(exdate.getDate() + exdays);		var c_value=escape(value) + ((exdays==null) ? "" : "; expires="+exdate.toUTCString());		document.cookie=c_name + "=" + c_value;	}		function getCookie(c_name)	{		var c_value = document.cookie;		var c_start = c_value.indexOf(" " + c_name + "=");		if (c_start == -1)		  {		  c_start = c_value.indexOf(c_name + "=");		  }		if (c_start == -1)		  {		  c_value = null;		  }		else		  {		  c_start = c_value.indexOf("=", c_start) + 1;		  var c_end = c_value.indexOf(";", c_start);		  if (c_end == -1)		  {		c_end = c_value.length;		}		c_value = unescape(c_value.substring(c_start,c_end));		}		return c_value;	}		function checkCookie()	{		visitList=getCookie( cookieName );		if( visitList!=null )		{		  	//console.log('cookie found');			//console.log('list: ' + visitList );						var splitList = visitList.split("/");			var i;			for(i=0; i < splitList.length-1; i++)			{				//console.log(splitList[i]);								var tag = splitList[i];				var holder = document.getElementById( tag + '_holder' );				if( !holder.visited )				{					holder.visited = true;					viewCount++;										var off = document.getElementById( tag + '_off' );					TweenMax.to(off, 0, { delay:0, css:{alpha:0}, ease:Quad.easeOut });										var visit = document.getElementById( tag + '_v' );					TweenMax.to(visit, 0, { css:{alpha:1}, ease:Quad.easeOut });										var mapInstCount = document.getElementById("mapInstCount");					mapInstCount.innerHTML = viewCount + ' of ' + stateIDs.length + ' Viewed';				}								var j;				for(j=0; j < subIDs.length; j++)				{					if(tag == subIDs[j])					{									var visitI = subMenuItems[ tag ].visited;						TweenMax.to(visitI, 0, { delay:0, css:{alpha:1}, ease:Quad.easeOut });						var offI = subMenuItems[ tag ].off;						TweenMax.to(offI, 0, { delay:0, css:{alpha:0}, ease:Quad.easeOut });						// lines						var visitL = subMenuItems[ tag ].lineVisit;						TweenMax.to(visitL, 0, { delay:0, css:{alpha:1}, ease:Quad.easeOut });						var offL = subMenuItems[ tag ].lineOff;						TweenMax.to(offL, 0, { delay:0, css:{alpha:0}, ease:Quad.easeOut });						var overL = subMenuItems[ tag ].lineOver;						TweenMax.to(overL, 0, { delay:0, css:{alpha:0}, ease:Quad.easeOut });						TweenMax.to( subMenuItems[tag].titleDiv, 0, {delay:0, css:{color:'#ffffff'} , ease:Quad.easeOut});					}				}			}					}		else		{			//console.log('no cookie found');			visitList = '';		  	setCookie( cookieName , visitList, 365);		}	}		function saveCookie()	{		//console.log('saving cookie...');		setCookie( cookieName, visitList, 365);	}		///----- state events		function onStateOver(e)	{		if(curState)		{			return false;		}				var tag = e.target.id.replace('state_', '');		var over = document.getElementById( tag + '_over' );		TweenMax.to(over, .3, { css:{alpha:1}, ease:Quad.easeOut });				var off = document.getElementById( tag + '_off' );		TweenMax.to(off, .3, { css:{alpha:0}, ease:Quad.easeOut });				var i;		for(i=0; i < subIDs.length; i++)		{			if(tag == subIDs[i])			{				var overI = subMenuItems[ tag ].over;				TweenMax.to(overI, .3, { css:{alpha:1}, ease:Quad.easeOut });								var offI = subMenuItems[ tag ].off;				TweenMax.to(offI, .3, { css:{alpha:0}, ease:Quad.easeOut });								///								var overL = subMenuItems[ tag ].lineOver;				TweenMax.to(overL, .3, { css:{alpha:1}, ease:Quad.easeOut });								var offL = subMenuItems[ tag ].lineOff;				TweenMax.to(offL, .3, { css:{alpha:0}, ease:Quad.easeOut });								///								TweenMax.to( subMenuItems[tag].titleDiv, .3, { css:{color:'#005663'} , ease:Quad.easeOut});				//subMenuItems[tag].titleDiv.style.color = '#005663';			}		}				///				var detailsName = document.getElementById("detailsName");		detailsName.innerHTML = stateNames[ e.target.num ];		TweenMax.to( detailsName , .3, { css:{alpha:1}, ease:Quad.easeOut});			}		function onStateOut(e)	{		if(curState)		{			return false;		}				var tag = e.target.id.replace('state_', '');				var holder = document.getElementById( tag + '_holder' );		if( holder.visited )		{		}		else		{			var off = document.getElementById( tag + '_off' );			TweenMax.to(off, .3, { css:{alpha:1}, ease:Quad.easeOut });		}				var over = document.getElementById( tag + '_over' );		TweenMax.to(over, .3, { css:{alpha:0}, ease:Quad.easeOut });				var i;		for(i=0; i < subIDs.length; i++)		{			if(tag == subIDs[i])			{				var overI = subMenuItems[ tag ].over;				TweenMax.to(overI, .3, { css:{alpha:0}, ease:Quad.easeOut });												////								var overL = subMenuItems[ tag ].lineOver;				TweenMax.to(overL, .3, { css:{alpha:0}, ease:Quad.easeOut });								if( holder.visited )				{				}				else				{					var offI = subMenuItems[ tag ].off;					TweenMax.to(offI, .3, { css:{alpha:1}, ease:Quad.easeOut });										var offL = subMenuItems[ tag ].lineOff;					TweenMax.to(offL, .3, { css:{alpha:1}, ease:Quad.easeOut });									}								TweenMax.to( subMenuItems[tag].titleDiv, .3, { css:{color:'#ffffff'} , ease:Quad.easeOut});							}		}				////				var detailsName = document.getElementById("detailsName");				TweenMax.to( detailsName , .5, { css:{alpha:0}, ease:Quad.easeOut});	}		function onStateClick(e)	{		if(curState)		{			return false;		}				var mapDetails = document.getElementById("mapDetails");		mapDetails.style.display = 'block';				var tag = e.target.id.replace('state_', '');		var holder = document.getElementById( tag + '_holder' );		curState = holder;				if( !holder.visited )		{			holder.visited = true;			viewCount++;						visitList += (tag + '/');			//console.log('save state: ' + tag + '.  visit: ' + visitList);			saveCookie();		}		var over = document.getElementById( tag + '_over' );		TweenMax.to(over, .3, { css:{alpha:1}, ease:Quad.easeOut });				var visit = document.getElementById( tag + '_v' );		TweenMax.to(visit, 0, { delay:1, css:{alpha:1}, ease:Quad.easeOut });				var i;		for(i=0; i < subIDs.length; i++)		{			if(tag == subIDs[i])			{							var visitI = subMenuItems[ tag ].visited;				TweenMax.to(visitI, 0, { delay:1, css:{alpha:1}, ease:Quad.easeOut });								var offI = subMenuItems[ tag ].off;				TweenMax.to(offI, 0, { delay:1, css:{alpha:0}, ease:Quad.easeOut });								// lines								var visitL = subMenuItems[ tag ].lineVisit;				TweenMax.to(visitL, 0, { delay:1, css:{alpha:1}, ease:Quad.easeOut });								var offL = subMenuItems[ tag ].lineOff;				TweenMax.to(offL, 0, { delay:1, css:{alpha:0}, ease:Quad.easeOut });								var overL = subMenuItems[ tag ].lineOver;				TweenMax.to(overL, 0, { delay:1, css:{alpha:0}, ease:Quad.easeOut });								TweenMax.to( subMenuItems[tag].titleDiv, 0, {delay:1, css:{color:'#ffffff'} , ease:Quad.easeOut});			}		}				var off = document.getElementById( tag + '_off' );		TweenMax.to(off, 0, { delay:1, css:{alpha:0}, ease:Quad.easeOut });				///				var map = document.getElementById("mapContainer");		TweenMax.to(map, 1, { delay:.2, css:{ scaleX:2, scaleY:2, x:stateZX[e.target.num], y:stateZY[e.target.num] }, ease:Quad.easeInOut});				///				var detailsName = document.getElementById("detailsName");		TweenMax.to( detailsName , .5, { delay:.5, css:{alpha:1}, ease:Quad.easeOut});				/// map sub menu				var mapMenu = document.getElementById("mapMenu");		TweenMax.to( mapMenu , 1, { delay:.2, css:{scaleX:2.3, scaleY:2.3, x:stateZX[e.target.num], y:stateZY[e.target.num] - 280, alpha:0}, ease:Quad.easeInOut});				var mapLines = document.getElementById("mapLines");		TweenMax.to( mapLines, .5, { delay:.2, css:{alpha:0}, ease:Quad.easeOut});				/// map instructions				var mapInst = document.getElementById("mapInstructions");		TweenMax.to( mapInst , 1, { delay:.2, css:{scaleX:2.3, scaleY:2.3, x:stateZX[e.target.num] - 1030, y:stateZY[e.target.num], alpha:0}, ease:Quad.easeInOut});				/// get / show teams				var sName = stateNames[ e.target.num ];		var teamList = VPXData.getStateTeams( sName );		showStateTeams( teamList );				/// set video window info				var vidInfo = document.getElementById( 'detailsVideoInfo' );		var stateInfo = VPXData.getStateData( sName );		var trackingBase = 'http://ad.doubleclick.net/clk;274673998;89122791;h?';		vidInfo.innerHTML = '<h3>' + stateInfo['desc'] + '</h3>';		vidInfo.innerHTML += '<br><br>';		vidInfo.innerHTML += '<h2>If you would like to find out details about travelling to ' + sName + ' please check <a href="' + trackingBase + stateInfo['link'] + '" target="_blank">Discover America’s expert guide</a>.'				/// audio 				VPXAudio.playAudio('stateclick');		setTimeout( "VPXAudio.playAudio('zoomin')", 400);			}		function onZoomOutClick(e)	{		/// hide team logos		var i;		var delayer = 0;		for(i=0; i < curTeamLogos.length; i++)		{			TweenMax.to( curTeamLogos[i], .1, {delay:delayer, css:{alpha:0}, ease:Quad.easeOut} );			delayer += .05;		}				/// move entire map				var map = document.getElementById("mapContainer");		TweenMax.to(map, 1, { delay:.2, css:{ scaleX:1, scaleY:1, x:521, y:280 }, ease:Quad.easeInOut, onComplete:disableOverlay});		TweenMax.to(curState.over, .5, { css:{ alpha:0}, ease:Quad.easeOut});		TweenMax.to(curState.off, .5, { css:{ alpha:0}, ease:Quad.easeOut});				/// map sub menu				var mapMenu = document.getElementById("mapMenu");		TweenMax.to( mapMenu , 1, { delay:.2, css:{scaleX:1, scaleY:1, x:0, y:0, alpha:1}, ease:Quad.easeInOut});				var mapLines = document.getElementById("mapLines");		TweenMax.to( mapLines, .5, { delay:.7, css:{alpha:1}, ease:Quad.easeOut});				/// map instructions				var mapInst = document.getElementById("mapInstructions");		TweenMax.to( mapInst , 1, { delay:.2, css:{scaleX:1, scaleY:1, x:0, y:0, alpha:1}, ease:Quad.easeInOut});				var mapInstCount = document.getElementById("mapInstCount");		mapInstCount.innerHTML = viewCount + ' of ' + stateIDs.length + ' Viewed';				/// state name label				var detailsName = document.getElementById("detailsName");		TweenMax.to( detailsName , .5, { delay:.0, css:{alpha:0}, ease:Quad.easeOut});				/// reset map manu		for(i=0; i < subIDs.length; i++)		{			TweenMax.to( subMenuItems[ subIDs[i] ].over, 0, { css:{ alpha:0 } });		}				///				var detailsZoomOut = document.getElementById("detailsZoomOut");		TweenMax.to( detailsZoomOut , .3, { delay:.0, css:{alpha:0}, ease:Quad.easeOut});				var detailsVideoWin = document.getElementById("detailsVideoWin");		TweenMax.to( detailsVideoWin , .3, { delay:.0, css:{alpha:0}, ease:Quad.easeOut});				var videoH = document.getElementById("detailsVideoHolder");		videoH.innerHTML = '';				/// audio 				VPXAudio.playAudio('zoomoutclick');		setTimeout( "VPXAudio.playAudio('zoomout')", 600);			}		function onZoomOutOver(e)	{		TweenMax.to(e.currentTarget.over, .3, {css:{alpha:1}, ease:Quad.easeOut});	}		function onZoomOutOut(e)	{		TweenMax.to(e.currentTarget.over, .3, {css:{alpha:0}, ease:Quad.easeOut});	}		function disableOverlay(e)	{		var mapDetails = document.getElementById("mapDetails");		mapDetails.style.display = 'none';		curState = null;				//var detailsName = document.getElementById("detailsName");		//detailsName.style.display = 'none';				var detailsZoomOut = document.getElementById("detailsZoomOut");		detailsZoomOut.style.display = 'none';				var detailsVideoWin = document.getElementById("detailsVideoWin");		detailsVideoWin.style.display = 'none';				var videoH = document.getElementById("detailsVideoHolder");		videoH.innerHTML = '';				restoreTeamView();	}	//----- details		function setVideo(e)	{		var videoH = document.getElementById("detailsVideoHolder");				var tag = curState.id.replace('_holder', '');				var i;		var sNum;		for(i=0; i < stateIDs.length; i++)		{			if( stateIDs[i] == tag )			{				sNum = i;			}		}				var stateData = VPXData.getStateData( stateNames[ sNum ] );		var ytID = stateData['youtube'];		if( ytID == '' )		{			ytID = 'uv42BVSdkCo';		} 		var ytLink = '<iframe id="youTubeVideo" width="386" height="212" src="http://www.youtube.com/embed/' + ytID + '?enablejsapi=1&amp;version=3&amp;playerapiid=ytplayer&amp;autohide=1&amp;modestbranding=1&amp;controls=1&amp;showinfo=0&amp;rel=0" frameborder="0" allowfullscreen></iframe>';		videoH.innerHTML = ytLink;			}	function showStateTeams( teams )	{		// unload previous logos		var i;		var teamsHolder = document.getElementById("teamsHolder");				for(i=0; i < curTeamLogos.length; i++)		{			teamsHolder.removeChild( curTeamLogos[i] );		}		curTeamLogos = [];				// check if teams, build				if(teams)		{				for(i=0; i < teams.length; i++)			{				//build team logos				var teamLogo  = document.createElement("div");				teamLogo.className = "teamLogo";				teamsHolder.appendChild( teamLogo );								curTeamLogos[i] = teamLogo;				TweenMax.to(teamLogo, 0, {css:{alpha:0}});								var teamLogoImage  = document.createElement("div");				teamLogoImage.className = "teamLogoImage";				//teamLogoImage.innerHTML = teams[i];				teamLogo.appendChild( teamLogoImage );								/// image								var teamImg = document.createElement("img");				var teamData = VPXData.getTeamData( teams[i] );				var logoPath = 'img/teams/logos/' + teamData['logo'];				teamImg.src = logoPath;				teamLogoImage.appendChild( teamImg );								/// details window								var teamInfoWin  = document.createElement("div");				teamInfoWin.className = "teamInfoWin";				teamLogo.appendChild( teamInfoWin );								var teamInfoBg = document.createElement("div");				teamInfoBg.className = "teamInfoBg";				teamInfoWin.appendChild( teamInfoBg );								TweenMax.to( teamInfoWin, 0, {css:{autoAlpha:0, height:0}});								var teamInfoData = document.createElement("div");				teamInfoData.className = "teamInfoData";				teamInfoWin.appendChild( teamInfoData );								/// button								var teamLogoButton  = document.createElement("div");				teamLogoButton.className = "teamLogoButton";				teamLogo.appendChild( teamLogoButton );								var image = document.createElement('img')				image.src = 'img/details/info_over.png';				teamLogoButton.appendChild( image );				TweenMax.to(image, 0, {css:{alpha:0}});				var infoOver = image;								$( teamLogoButton ).click(onTeamLogoClick);				$( teamLogoButton ).mouseover(onTeamLogoOver);				$( teamLogoButton ).mouseout(onTeamLogoOut);				teamLogoButton.teamName = teams[i];				teamLogoButton.holder = teamLogo;				teamLogoButton.win = teamInfoWin;				teamLogoButton.over = image;								$( teamLogoImage ).click(onTeamLogoClick);				$( teamLogoImage ).mouseover(onTeamLogoOver);				$( teamLogoImage ).mouseout(onTeamLogoOut);				teamLogoImage.teamName = teams[i];				teamLogoImage.holder = teamLogo;				teamLogoImage.win = teamInfoWin;				teamLogoImage.over = image;								var teamLogoClose  = document.createElement("div");				teamLogoClose.className = "teamLogoClose";				teamLogoButton.appendChild( teamLogoClose );				$( teamLogoClose ).click( onTeamCloseClick );				TweenMax.to(teamLogoClose, 0, {css:{autoAlpha:0}});				teamLogo.close = teamLogoClose;								teamLogoClose.holder = teamLogo;				teamLogo.win = teamInfoWin;				teamLogo.winData = teamInfoData;				teamLogo.teamName = teams[i];								var image = document.createElement('img')				image.src = 'img/details/close_over.png';				teamLogoClose.appendChild( image );				TweenMax.to(image, 0, {css:{alpha:0}});				teamLogoClose.over = image;				teamLogoClose.infoOver = infoOver;								$( teamLogoClose ).mouseover( onTeamCloseOver );				$( teamLogoClose ).mouseout( onTeamCloseOut );							}						// define layout based on logo count			var originX;			var originY;			var colMax;			var totalLogos = curTeamLogos.length;						if(totalLogos > 8)			{				colMax = 3;				originX = 0;				originY = 0;			}			else if(totalLogos >= 6)			{				colMax = 2;				originX = 134;				originY = 0;			}			else if(totalLogos == 5)			{				colMax = 2;				originX = 134;				originY = 57;			}			else if(totalLogos == 4)			{				colMax = 1;				originX = 268;				originY = 0;			}			else if(totalLogos == 3)			{				colMax = 1;				originX = 268;				originY = 57;			}			else if(totalLogos == 2)			{				colMax = 1;				originX = 268;				originY = 114;			}			else if(totalLogos == 1)			{				colMax = 1;				originX = 268;				originY = 171;			}						// organize logos, animate on			var delayer = 1;			var col = 0;			var row = 0;						for(i=0; i < curTeamLogos.length; i++)			{				var newX = originX + (col * 134);				var newY = originY + (row * 114);								TweenMax.to( curTeamLogos[i], 0, { css:{x:newX, y:newY} });								curTeamLogos[i].startX = newX;				curTeamLogos[i].startY = newY;								col++;				if(col == colMax)				{					col = 0;					row++;				}								// show team logo				TweenMax.to( curTeamLogos[i], .3, {delay:delayer, css:{alpha:1}, ease:Quad.easeOut});				delayer += .1;			}											}		else		{			//console.log('no teams found');		}				// display zoom out button					var detailsZoomOut = document.getElementById("detailsZoomOut");		TweenMax.to( detailsZoomOut , 0, { css:{alpha:0}});		detailsZoomOut.style.display = 'block';		TweenMax.to( detailsZoomOut , .5, { delay:.7, css:{alpha:1}, ease:Quad.easeOut});				// show video, if teams				var detailsVideoWin = document.getElementById("detailsVideoWin");		TweenMax.to( detailsVideoWin, 0, { css:{alpha:0}});		detailsVideoWin.style.display = 'block';		TweenMax.to( detailsVideoWin , .5, { delay:1, css:{alpha:1}, ease:Quad.easeOut, onComplete:setVideo});			}		function onTeamLogoClick(e)	{		if(inTeamView)		{			return false;		}				var i;		var delayer = 0;		for(i=0; i < curTeamLogos.length; i++)		{			if( curTeamLogos[i] != e.currentTarget.holder )			{				curTeamLogos[i].style.zIndex = 1;				TweenMax.to( curTeamLogos[i], .2, { delay:delayer, css:{ autoAlpha:.3 }, ease:Quad.easeOut });				delayer += .05;			}			else			{				curTeamLogos[i].style.zIndex = 2;			}		}				TweenMax.to( e.currentTarget.holder, 			.5, { delay:.2, css:{x:240, y:0} , ease:Quad.easeInOut});		TweenMax.to( e.currentTarget.win, 				.5, { delay:.7, css:{autoAlpha:1, height:390} , ease:Quad.easeOut});		TweenMax.to( e.currentTarget.holder.close, 		.3, { delay:1.2, css:{autoAlpha:1} , ease:Quad.easeOut});				inTeamView = true;				/// /// set team title, image				var curWin = e.currentTarget.holder.winData;		var teamName = e.currentTarget.holder.teamName;				var teamData = VPXData.getTeamData( teamName );		var teamPhoto = teamData['logo'].replace('_logo.png','_image.jpg');				curWin.innerHTML = '<h1>' + teamName + '</h1>';		curWin.innerHTML += '<img src="img/teams/photos/' + teamPhoto + '">';		curWin.innerHTML += '<h2>' + teamData['caption'] + '</h2>';				/// set team details				var teamDetails  = document.createElement("div");		teamDetails.className = "teamDetails";		curWin.appendChild( teamDetails );				var i;		for(i=1; i <= 5; i++)		{			var teamDetail  = document.createElement("div");			teamDetail.className = "teamDetail";			teamDetails.appendChild( teamDetail );						var detailStr = '<p><h1>' + teamData['detail' + i].replace(':', ':</h1>') + '</p>';			teamDetail.innerHTML += detailStr;		}						/// break line				var teamBreak  = document.createElement("div");		teamBreak.className = "teamBreak";		curWin.appendChild( teamBreak );				/// set team content				var teamContent  = document.createElement("div");		teamContent.className = "teamContent";		curWin.appendChild( teamContent );				var conStr = teamData['desc'];		teamContent.innerHTML += conStr;				/// audio 				VPXAudio.playAudio('teamclick');		setTimeout( "VPXAudio.playAudio('revealteam')", 700);			}		function onTeamLogoOver(e)	{		if(inTeamView)		{			return false;		}				TweenMax.to( e.currentTarget.over, .3, {css:{alpha:1}, ease:Quad.easeOut});	}		function onTeamLogoOut(e)	{		if(inTeamView)		{			return false;		}				TweenMax.to( e.currentTarget.over, .3, {css:{alpha:0}, ease:Quad.easeOut});	}		function onTeamCloseClick(e)	{		TweenMax.to( e.currentTarget, 				.2, { css:{autoAlpha:0}, ease:Quad.easeOut});		TweenMax.to( e.currentTarget.holder.win,	.4, { css:{autoAlpha:0, height:0} , ease:Quad.easeOut});		TweenMax.to( e.currentTarget.holder, 		.4, { delay:.4, css:{ x:e.currentTarget.holder.startX, y:e.currentTarget.holder.startY}, ease:Quad.easeInOut});				var i;		var delayer = .4;		for(i=0; i < curTeamLogos.length; i++)		{			if( curTeamLogos[i] != e.currentTarget.holder )			{				TweenMax.to( curTeamLogos[i], .2, { delay:delayer, css:{ autoAlpha:1}, ease:Quad.easeOut });				delayer += .05;			}		}				setTimeout( restoreTeamView, 600 );				/// audio 				VPXAudio.playAudio('closeclick');		}		function onTeamCloseOver(e)	{				TweenMax.to( e.currentTarget.over, .3, {css:{alpha:1}, ease:Quad.easeOut});		TweenMax.to( e.currentTarget.infoOver, .3, {css:{alpha:1}, ease:Quad.easeOut});	}		function onTeamCloseOut(e)	{		TweenMax.to( e.currentTarget.over, .3, {css:{alpha:0}, ease:Quad.easeOut});		TweenMax.to( e.currentTarget.infoOver, .3, {css:{alpha:0}, ease:Quad.easeOut});	}		function restoreTeamView()	{		inTeamView = false;	}		//------ header, footer		function onAudioOver(e)	{		TweenMax.to(btn_audio.muteOver, .3, { css:{alpha:1} });		TweenMax.to(btn_audio.unmuteOver, .3, { css:{alpha:1} });	}		function onAudioOut(e)	{		TweenMax.to(btn_audio.muteOver, .3, { css:{alpha:0} });		TweenMax.to(btn_audio.unmuteOver, .3, { css:{alpha:0} });	}		function onAudioClick(e)	{				if(e.currentTarget.setting == 'on')		{			btn_audio.mute.style.display = 'none';			btn_audio.muteOver.style.display = 'none';						btn_audio.unmute.style.display = 'block';			btn_audio.unmuteOver.style.display = 'block';						e.currentTarget.setting = 'off';			VPXAudio.setAudio(false);		}		else		{			btn_audio.mute.style.display = 'block';			btn_audio.muteOver.style.display = 'block';						btn_audio.unmute.style.display = 'none';			btn_audio.unmuteOver.style.display = 'none';			e.currentTarget.setting = 'on';			VPXAudio.setAudio(true);		}	}		function onESPNLogoClick(e)	{		window.open('http://www.espn.com/', '_blank');	}		//------ utils		function trackImageLoad()	{		bulkImgLoad++;		var mapLoaderBar = document.getElementById("mapLoaderBar");				var newPer = bulkImgLoad / imageTotal;		var newWidth = 160 * newPer		TweenMax.to( mapLoaderBar, .2, {css:{width:newWidth}} );				if(bulkImgLoad == imageTotal)		{			launchApp();		}			}		function launchApp()	{		var mapMasker = document.getElementById("mapMasker");		var mapSubnav = document.getElementById("mapSubnav");		var mapLoader = document.getElementById("mapLoader");		var mapLoaderWin = document.getElementById("mapLoaderWin");				TweenMax.to( mapMasker, 0, {css:{autoAlpha:1}});		TweenMax.to( mapSubnav, 0, {css:{autoAlpha:1}});				TweenMax.to( mapLoaderWin,  .3, {delay:.2, css:{autoAlpha:0, y:20}, ease:Quad.easeOut});		TweenMax.to( mapLoader, 	.5, {delay:.6, css:{autoAlpha:0}, ease:Quad.easeOut});				// check cookie 		checkCookie()	}		//----------------------------------------------	window.VPXInterface = VPXInterface;}(window));